<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>documentation</title>
  <style>
    table, th, td {
      border: 1px solid #e040fb;
      border-collapse: collapse;
      font-size: 14px;
      padding: 5px;
      margin: 20px;
    }
    body {
      margin: 25px;
      background-color: #424242;
      color: #1DE9B6;
    }
    footer, h1 {
      text-align: center;
    }
    a, h1, h2, footer, span {
      color: #e040fb;
    }
    h1 {
      margin-top: 40px;
    }
  </style>
</head>

<body>
  <h1>myFlix ðŸŽ¬</h1>
  <h2>Overview</h2>
  <p>
    myFlix is a REST API that provides access to the myFlix movies database. The database contains a movies collection that holds data for a 
    selection of classic films. Each record includes a title, synopsis, image (from the IMDb), data about the director and data about
    the movie genre. There is also a users collection that holds data about registered users of any applications that consume the API. A variety
    of CRUD operations can be performed on the data by sending HTTP requests to the API endpoints. Details are provided in the following table.
  </p>
  <br>
  <h2>Table of API endpoints</h2>
  <p>
    This table lists all the available endpoints and for each endpoint provides the following information: the URL, a description
    of the operation fulfilled by the request, the HTTP method used in the request, the operation type, whether a request body is required and an 
    example of the format used; the format of responses received, and an example response. Request parameters included within the URLs are indicated
    using square brackets.
  </p>
  <br>
  <table>
    <tr>
      <th>URL</th>
      <th>Description</th>
      <th>Method</th>
      <th>Operation</th>
      <th>Request body</th>
      <th>Response format</th>
      <th>Example response</th>
    </tr>
    <tr>
      <td>/</td>
      <td>Returns a welcome message</td>
      <td>GET</td>
      <td>Read</td>
      <td>None</td>
      <td>Text</td>
      <td>Welcome to myFlix!</td>
    </tr>
    <tr>
      <td>/login?[Username=username&Password=password]</td>
      <td>Logs in a registered user and creates an authorisation token</td>
      <td>POST</td>
      <td>Create</td>
      <td>None. A username and password must be submitted as request parameters. By entering these via a form in the front end application, they are attached as a query string to the URL</td>
      <td>A JSON object containing the logged in user and the authorisation token. Passwords returned from the database are always hashed</td>
      <td>
        {<br>
        "user":{<br>
          "FavouriteMovies":["movieid1","movieid2"],<br>
          "_id":"mydatabaseid",<br>
          "Username":"myusername",<br>
          "Password":"myh@$hedp@$$w0rd",<br>
          "Email":"myemail@gmail.com",<br>
          "Birthday":"2022-01-01T00:00:00.000Z",<br>
          "__v":0<br>
        },<br>
        "token":"exampletoken"<br>
        }
      </td>
    </tr>
    <tr>
      <td>/users</td>
      <td>Registers a new user</td>
      <td>POST</td>
      <td>Create</td>
      <td>A JSON object containing the following fields:<br><br>
        {<br>
          "Username": "myusername",<br>
          "Password": "mypassword",<br>
          "Email": "myemail@gmail.com",<br>
          "Birthday": "01/01/2022"<br>
        }
      </td>
      <td>A JSON object containing the registered user</td>
      <td>
        {<br>
          "FavouriteMovies": [],<br>
          "_id": "mydatabaseid",<br>
          "Username": "myusername",<br>
          "Password": "myh@$hedp@$$w0rd",<br>
          "Email": "myemail@gmail.com",<br>
          "Birthday": "2022-01-01T00:00:00.000Z",<br>
          "__v": 0<br>
        } 
      </td>
    </tr>
    <tr>
      <td>/users/[Username]</td>
      <td>Returns the user record for a named user</td>
      <td>GET</td>
      <td>Read</td>
      <td>None</td>
      <td>A JSON object containing the user record. For this endpoint, the response returned contains an array with the full movie record for each of the user's favourite movies instead of an array with just the movie IDs</td>
      <td>
        {<br>
          "FavouriteMovies":<br>
           [{<br>
             "Genre": {"Name": "Agenre", "Description": "This text describes the genre."},<br>
              "Director": {"Name": "A Director", "Bio": "This text is a bio of the director.", "Birth": "1900", "Death": "2000"},<br>
              "_id": "movieid1",<br>
                "Title": "A movie",<br>
                "Description": "This text is a synopsis.",<br>
                "ImagePath": "https://path.jpg",<br>
                "Featured": false<br>
           }],<br>
          "_id": "mydatabaseid",<br>
          "Username": "myusername",<br>
          "Password": "myh@$hedp@$$w0rd",<br>
          "Email": "myemail@gmail.com",<br>
          "Birthday": "2022-01-01T00:00:00.000Z",<br>
          "__v": 0<br>
        }
      </td>
    </tr>
    <tr>
      <td>/users/[Username]</td>
      <td>Updates the user record for a named user</td>
      <td>PUT</td>
      <td>Update</td>
      <td>A JSON object containing the following fields:<br><br>
        {<br>
          "Username": "myusername",<br>
          "Password": "mypassword",<br>
          "Email": "myemail@gmail.com",<br>
          "Birthday": "01/01/2022"<br>
        }
      </td>
      <td>A JSON object with the updated user details </td>
      <td>
        {<br>
          "FavouriteMovies": [],<br>
          "_id": "mydatabaseid",<br>
          "Username": "mynewusername",<br>
          "Password": "mynewh@$hedp@$$w0rd",<br>
          "Email": "myemail@gmail.com",<br>
          "Birthday": "2022-01-01T00:00:00.000Z",<br>
          "__v": 0<br>
        } 
      </td>
    </tr>
    <tr>
      <td>/users/[Username]</td>
      <td>Deletes the user record for a named user</td>
      <td>DELETE</td>
      <td>Delete</td>
      <td>None</td>
      <td>Text</td>
      <td>[Username] has been deregistered</td>
    </tr>
    <tr>
      <td>/users/favourites/[Username]</td>
      <td>Returns an array of favourite movie IDs for the named user</td>
      <td>GET</td>
      <td>Read</td>
      <td>None</td>
      <td>An array of favourite movie IDs</td>
      <td>["movieid1","movieid2"]</td>
    </tr>
    <tr>
      <td>/users/[Username]/[MovieID]</td>
      <td>Adds a movie ID to the named user's array of favourite movies</td>
      <td>PUT</td>
      <td>Update</td>
      <td>None</td>
      <td>An array of the user's updated favourite movies. For this endpoint, the response returned contains an array with the full movie record for each of the user's favourite movies instead of an array with just the movie IDs</td>
      <td>
        [<br>
        {<br>
        "Genre": {
            "Name": "Agenre",
            "Description": "This text describes the genre."
        },<br>
        "Director": {
            "Name": "A Director",
            "Bio": "This text is a bio of the director.",
            "Birth": "2000"
        },<br>
        "_id": "movieid1",<br>
        "Title": "A movie",<br>
        "Description": "This text is a synopsis.",<br>
        "ImagePath": "https://path.jpg",<br>
        "Featured": false<br>
        },<br>
        {<br>
        "Genre": {
            "Name": "Another genre",
            "Description": "This text describes the genre."
        },<br>
        "Director": {
            "Name": "Another Director",
            "Bio": "This text is a bio of the director.",
            "Birth": "1900",
            "Death": "2000"
        },<br>
        "_id": "movieid2",<br>
        "Title": "Another movie",<br>
        "Description": "This text is a synopsis.",<br>
        "ImagePath": "https://path.jpg",<br>
        "Featured": false<br>
        }<br>
        ]
      </td>
    </tr>
    <tr>
      <td>/users/[Username]/[MovieID]</td>
      <td>Removes a movie ID from the named user's array of favourite movies</td>
      <td>DELETE</td>
      <td>Delete</td>
      <td>None</td>
      <td>An array of the user's updated favourite movies. For this endpoint, the response returned contains an array with the full movie record for each of the user's favourite movies instead of an array with just the movie IDs</td>
      <td>
        [<br>
        {<br>
        "Genre": {
            "Name": "Agenre",
            "Description": "This text describes the genre."
        },<br>
        "Director": {
            "Name": "A Director",
            "Bio": "This text is a bio of the director.",
            "Birth": "2000"
        },<br>
        "_id": "movieid1",<br>
        "Title": "A movie",<br>
        "Description": "This text is a synopsis.",<br>
        "ImagePath": "https://path.jpg",<br>
        "Featured": false<br>
        }<br>
        ]
      </td>
    </tr>
    <tr>
      <td>/movies</td>
      <td>Returns the records for all the movies in the movies collection in the database</td>
      <td>GET</td>
      <td>Read</td>
      <td>None</td>
      <td>An array of movie records</td>
      <td>
        [<br>
        {<br>
          "Genre":{"Name":"Agenre","Description":"This text describes the genre."},<br>
          "Director":{"Name":"A Director","Bio":"This text is a bio of the director.",
          "Birth":"1900",
          "Death":"2000"},<br>
          "_id":"movieid1",<br>
          "Title":"A movie",<br>
          "Description":"This text is a synopsis.",<br>
          "ImagePath":"https://path.jpg",<br>
          "Featured":true<br>
        },<br>
        {<br>
          "Genre":{"Name":"Anothergenre","Description":"This text describes the genre."},<br>
          "Director":{"Name":"Another Director","Bio":"This text is a bio of the director.",
          "Birth":"1900",
          "Death":"2000"},<br>
          "_id":"movieid2",<br>
          "Title":"Another movie",<br>
          "Description":"This text is a synopsis.",<br>
          "ImagePath":"https://path.jpg",<br>
          "Featured":false<br>
        }<br>
        ]
      </td>
    </tr>
    <tr>
      <td>/movies/[Title]</td>
      <td>Returns the movie record for a movie specified by title</td>
      <td>GET</td>
      <td>Read</td>
      <td>None</td>
      <td>A JSON object containing the record for the movie requested</td>
      <td>
        {<br>
          "Genre": {"Name":"Agenre","Description":"This text describes the genre."},<br>
          "Director": {"Name":"A Director","Bio":"This text is a bio of the director.","Birth":"2000"},<br>
          "_id":"movieid1",<br>
          "Title":"A movie",<br>
          "Description":"This text is a synopsis.",<br>
          "ImagePath":"https://path.jpg",<br>
          "Featured":false<br>
        }
      </td>
    </tr>
    <tr>
      <td>/movies/genre/[Name]</td>
      <td>Returns the description of a movie genre searched for by name</td>
      <td>GET</td>
      <td>Read</td>
      <td>None</td>
      <td>Text</td>
      <td>This text describes the genre.</td>
    </tr>
    <tr>
      <td>/movies/director/[Name]</td>
      <td>Returns the data about a director searched for by name</td>
      <td>GET</td>
      <td>Read</td>
      <td>None</td>
      <td>A JSON object with details of the director requested</td>
      <td>
        {<br>"Name":"A Director",<br>
        "Bio":"This text is a bio of the director.",<br>
        "Birth":"1900",<br>
        "Death":"2000"<br>}
      </td>
    </tr>
  </table>
  <br>
  <h2>Further information</h2>
  <p>For further information about this API, please visit the project repository on github: 
    <a href="" target="_blank"> Your repo name</a>
  </p>
  <br>
  <footer>
    <p>
      Designed by Phemia Ampaire 2022 Â© All Rights Reserved
    </p>
  </footer>
</body>

</html>